<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0909.1155                               -->
<workbook original-version='18.1' source-build='2023.1.6 (20231.23.0909.1155)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='salaries' inline='true' name='federated.1p6boh80tuqhao16nnaj90lxm1ur' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='salaries' name='textscan.171fn3t0f2vipn12yb8q10zjldjh'>
            <connection class='textscan' directory='C:/Users/embak/Downloads/archive (4)' filename='salaries.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.171fn3t0f2vipn12yb8q10zjldjh' name='salaries.csv' table='[salaries#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='work_year' ordinal='0' />
            <column datatype='string' name='experience_level' ordinal='1' />
            <column datatype='string' name='employment_type' ordinal='2' />
            <column datatype='string' name='job_title' ordinal='3' />
            <column datatype='integer' name='salary' ordinal='4' />
            <column datatype='string' name='salary_currency' ordinal='5' />
            <column datatype='integer' name='salary_in_usd' ordinal='6' />
            <column datatype='string' name='employee_residence' ordinal='7' />
            <column datatype='integer' name='remote_ratio' ordinal='8' />
            <column datatype='string' name='company_location' ordinal='9' />
            <column datatype='string' name='company_size' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.171fn3t0f2vipn12yb8q10zjldjh' name='salaries.csv' table='[salaries#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='work_year' ordinal='0' />
            <column datatype='string' name='experience_level' ordinal='1' />
            <column datatype='string' name='employment_type' ordinal='2' />
            <column datatype='string' name='job_title' ordinal='3' />
            <column datatype='integer' name='salary' ordinal='4' />
            <column datatype='string' name='salary_currency' ordinal='5' />
            <column datatype='integer' name='salary_in_usd' ordinal='6' />
            <column datatype='string' name='employee_residence' ordinal='7' />
            <column datatype='integer' name='remote_ratio' ordinal='8' />
            <column datatype='string' name='company_location' ordinal='9' />
            <column datatype='string' name='company_size' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[salaries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>work_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[work_year]</local-name>
            <parent-name>[salaries.csv]</parent-name>
            <remote-alias>work_year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[salaries.csv_42925FF39E474F368419E3F44470F4C4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>experience_level</remote-name>
            <remote-type>129</remote-type>
            <local-name>[experience_level]</local-name>
            <parent-name>[salaries.csv]</parent-name>
            <remote-alias>experience_level</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[salaries.csv_42925FF39E474F368419E3F44470F4C4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>employment_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[employment_type]</local-name>
            <parent-name>[salaries.csv]</parent-name>
            <remote-alias>employment_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[salaries.csv_42925FF39E474F368419E3F44470F4C4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>job_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[job_title]</local-name>
            <parent-name>[salaries.csv]</parent-name>
            <remote-alias>job_title</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[salaries.csv_42925FF39E474F368419E3F44470F4C4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>salary</remote-name>
            <remote-type>20</remote-type>
            <local-name>[salary]</local-name>
            <parent-name>[salaries.csv]</parent-name>
            <remote-alias>salary</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[salaries.csv_42925FF39E474F368419E3F44470F4C4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>salary_currency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[salary_currency]</local-name>
            <parent-name>[salaries.csv]</parent-name>
            <remote-alias>salary_currency</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[salaries.csv_42925FF39E474F368419E3F44470F4C4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>salary_in_usd</remote-name>
            <remote-type>20</remote-type>
            <local-name>[salary_in_usd]</local-name>
            <parent-name>[salaries.csv]</parent-name>
            <remote-alias>salary_in_usd</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[salaries.csv_42925FF39E474F368419E3F44470F4C4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>employee_residence</remote-name>
            <remote-type>129</remote-type>
            <local-name>[employee_residence]</local-name>
            <parent-name>[salaries.csv]</parent-name>
            <remote-alias>employee_residence</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[salaries.csv_42925FF39E474F368419E3F44470F4C4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>remote_ratio</remote-name>
            <remote-type>20</remote-type>
            <local-name>[remote_ratio]</local-name>
            <parent-name>[salaries.csv]</parent-name>
            <remote-alias>remote_ratio</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[salaries.csv_42925FF39E474F368419E3F44470F4C4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>company_location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[company_location]</local-name>
            <parent-name>[salaries.csv]</parent-name>
            <remote-alias>company_location</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[salaries.csv_42925FF39E474F368419E3F44470F4C4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>company_size</remote-name>
            <remote-type>129</remote-type>
            <local-name>[company_size]</local-name>
            <parent-name>[salaries.csv]</parent-name>
            <remote-alias>company_size</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[salaries.csv_42925FF39E474F368419E3F44470F4C4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Region' datatype='string' name='[Employee Residence (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[employee_residence]' new-bin='true'>
          <bin default-name='false' value='&quot;Africa&quot;'>
            <value>&quot;DZ&quot;</value>
            <value>&quot;EG&quot;</value>
            <value>&quot;GH&quot;</value>
            <value>&quot;KE&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Asia&quot;'>
            <value>&quot;AE&quot;</value>
            <value>&quot;CN&quot;</value>
            <value>&quot;HK&quot;</value>
            <value>&quot;ID&quot;</value>
            <value>&quot;IL&quot;</value>
            <value>&quot;IN&quot;</value>
            <value>&quot;IQ&quot;</value>
            <value>&quot;IR&quot;</value>
            <value>&quot;JP&quot;</value>
            <value>&quot;KR&quot;</value>
            <value>&quot;KW&quot;</value>
            <value>&quot;MY&quot;</value>
            <value>&quot;PH&quot;</value>
            <value>&quot;PK&quot;</value>
            <value>&quot;QA&quot;</value>
            <value>&quot;RU&quot;</value>
            <value>&quot;SA&quot;</value>
            <value>&quot;SG&quot;</value>
            <value>&quot;TH&quot;</value>
            <value>&quot;UZ&quot;</value>
            <value>&quot;VN&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Australia&quot;'>
            <value>&quot;AS&quot;</value>
            <value>&quot;AU&quot;</value>
            <value>&quot;BA&quot;</value>
            <value>&quot;BG&quot;</value>
            <value>&quot;BO&quot;</value>
            <value>&quot;CF&quot;</value>
            <value>&quot;CR&quot;</value>
            <value>&quot;DO&quot;</value>
            <value>&quot;LT&quot;</value>
            <value>&quot;MU&quot;</value>
            <value>&quot;NG&quot;</value>
            <value>&quot;NZ&quot;</value>
            <value>&quot;RS&quot;</value>
            <value>&quot;SE&quot;</value>
            <value>&quot;TN&quot;</value>
            <value>&quot;ZA&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Europe&quot;'>
            <value>&quot;AD&quot;</value>
            <value>&quot;AM&quot;</value>
            <value>&quot;AT&quot;</value>
            <value>&quot;BE&quot;</value>
            <value>&quot;CH&quot;</value>
            <value>&quot;CY&quot;</value>
            <value>&quot;CZ&quot;</value>
            <value>&quot;DE&quot;</value>
            <value>&quot;DK&quot;</value>
            <value>&quot;EE&quot;</value>
            <value>&quot;ES&quot;</value>
            <value>&quot;FI&quot;</value>
            <value>&quot;FR&quot;</value>
            <value>&quot;GB&quot;</value>
            <value>&quot;GE&quot;</value>
            <value>&quot;GR&quot;</value>
            <value>&quot;HR&quot;</value>
            <value>&quot;HU&quot;</value>
            <value>&quot;IE&quot;</value>
            <value>&quot;IT&quot;</value>
            <value>&quot;JE&quot;</value>
            <value>&quot;LU&quot;</value>
            <value>&quot;LV&quot;</value>
            <value>&quot;MD&quot;</value>
            <value>&quot;MT&quot;</value>
            <value>&quot;NL&quot;</value>
            <value>&quot;NO&quot;</value>
            <value>&quot;PL&quot;</value>
            <value>&quot;PT&quot;</value>
            <value>&quot;RO&quot;</value>
            <value>&quot;SI&quot;</value>
            <value>&quot;TR&quot;</value>
            <value>&quot;UA&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;North America&quot;'>
            <value>&quot;CA&quot;</value>
            <value>&quot;US&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;South America&quot;'>
            <value>&quot;AR&quot;</value>
            <value>&quot;BR&quot;</value>
            <value>&quot;CL&quot;</value>
            <value>&quot;CO&quot;</value>
            <value>&quot;EC&quot;</value>
            <value>&quot;HN&quot;</value>
            <value>&quot;MX&quot;</value>
            <value>&quot;PE&quot;</value>
            <value>&quot;PR&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='salaries.csv' datatype='table' name='[__tableau_internal_object_id__].[salaries.csv_42925FF39E474F368419E3F44470F4C4]' role='measure' type='quantitative' />
      <column caption='Company Location' datatype='string' name='[company_location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Company Size' datatype='string' name='[company_size]' role='dimension' type='nominal' />
      <column caption='Employee Residence' datatype='string' name='[employee_residence]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Employment Type' datatype='string' name='[employment_type]' role='dimension' type='nominal' />
      <column caption='Experience Level' datatype='string' name='[experience_level]' role='dimension' type='nominal' />
      <column caption='Job Title' datatype='string' name='[job_title]' role='dimension' type='nominal' />
      <column caption='Remote Ratio' datatype='integer' name='[remote_ratio]' role='measure' type='quantitative' />
      <column caption='Salary' datatype='integer' hidden='true' name='[salary]' role='measure' type='quantitative' />
      <column caption='Salary Currency' datatype='string' hidden='true' name='[salary_currency]' role='dimension' type='nominal' />
      <column caption='Salary In Usd' datatype='integer' name='[salary_in_usd]' role='measure' type='quantitative' />
      <column caption='Work Year' datatype='integer' name='[work_year]' role='dimension' type='quantitative' />
      <column-instance column='[company_size]' derivation='None' name='[none:company_size:nk]' pivot='key' type='nominal' />
      <column-instance column='[employment_type]' derivation='None' name='[none:employment_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[experience_level]' derivation='None' name='[none:experience_level:nk]' pivot='key' type='nominal' />
      <group caption='Action (Employee Residence (group),Employee Residence)' hidden='true' name='[Action (Employee Residence (group),Employee Residence)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Employee Residence (group)]' />
          <groupfilter function='level-members' level='[employee_residence]' />
        </groupfilter>
      </group>
      <group caption='Action (Employment Type,Experience Level)' hidden='true' name='[Action (Employment Type,Experience Level)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[employment_type]' />
          <groupfilter function='level-members' level='[experience_level]' />
        </groupfilter>
      </group>
      <group caption='Action (Region,Employee Residence)' hidden='true' name='[Action (Region,Employee Residence)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Employee Residence (group)]' />
          <groupfilter function='level-members' level='[employee_residence]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:experience_level:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;EN&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;EX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' type='shape' />
          <encoding attr='color' field='[Employee Residence (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:company_size:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;L&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;M&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:employment_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;PT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='salaries.csv' id='salaries.csv_42925FF39E474F368419E3F44470F4C4'>
            <properties context=''>
              <relation connection='textscan.171fn3t0f2vipn12yb8q10zjldjh' name='salaries.csv' table='[salaries#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='work_year' ordinal='0' />
                  <column datatype='string' name='experience_level' ordinal='1' />
                  <column datatype='string' name='employment_type' ordinal='2' />
                  <column datatype='string' name='job_title' ordinal='3' />
                  <column datatype='integer' name='salary' ordinal='4' />
                  <column datatype='string' name='salary_currency' ordinal='5' />
                  <column datatype='integer' name='salary_in_usd' ordinal='6' />
                  <column datatype='string' name='employee_residence' ordinal='7' />
                  <column datatype='integer' name='remote_ratio' ordinal='8' />
                  <column datatype='string' name='company_location' ordinal='9' />
                  <column datatype='string' name='company_size' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1p6boh80tuqhao16nnaj90lxm1ur'>
      <datasources>
        <datasource caption='salaries' name='federated.1p6boh80tuqhao16nnaj90lxm1ur' />
      </datasources>
      <datasource-dependencies datasource='federated.1p6boh80tuqhao16nnaj90lxm1ur'>
        <column caption='Region' datatype='string' name='[Employee Residence (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='categorical-bin' column='[employee_residence]' new-bin='true'>
            <bin default-name='false' value='&quot;Africa&quot;'>
              <value>&quot;DZ&quot;</value>
              <value>&quot;EG&quot;</value>
              <value>&quot;GH&quot;</value>
              <value>&quot;KE&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Asia&quot;'>
              <value>&quot;AE&quot;</value>
              <value>&quot;CN&quot;</value>
              <value>&quot;HK&quot;</value>
              <value>&quot;ID&quot;</value>
              <value>&quot;IL&quot;</value>
              <value>&quot;IN&quot;</value>
              <value>&quot;IQ&quot;</value>
              <value>&quot;IR&quot;</value>
              <value>&quot;JP&quot;</value>
              <value>&quot;KR&quot;</value>
              <value>&quot;KW&quot;</value>
              <value>&quot;MY&quot;</value>
              <value>&quot;PH&quot;</value>
              <value>&quot;PK&quot;</value>
              <value>&quot;QA&quot;</value>
              <value>&quot;RU&quot;</value>
              <value>&quot;SA&quot;</value>
              <value>&quot;SG&quot;</value>
              <value>&quot;TH&quot;</value>
              <value>&quot;UZ&quot;</value>
              <value>&quot;VN&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Australia&quot;'>
              <value>&quot;AS&quot;</value>
              <value>&quot;AU&quot;</value>
              <value>&quot;BA&quot;</value>
              <value>&quot;BG&quot;</value>
              <value>&quot;BO&quot;</value>
              <value>&quot;CF&quot;</value>
              <value>&quot;CR&quot;</value>
              <value>&quot;DO&quot;</value>
              <value>&quot;LT&quot;</value>
              <value>&quot;MU&quot;</value>
              <value>&quot;NG&quot;</value>
              <value>&quot;NZ&quot;</value>
              <value>&quot;RS&quot;</value>
              <value>&quot;SE&quot;</value>
              <value>&quot;TN&quot;</value>
              <value>&quot;ZA&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Europe&quot;'>
              <value>&quot;AD&quot;</value>
              <value>&quot;AM&quot;</value>
              <value>&quot;AT&quot;</value>
              <value>&quot;BE&quot;</value>
              <value>&quot;CH&quot;</value>
              <value>&quot;CY&quot;</value>
              <value>&quot;CZ&quot;</value>
              <value>&quot;DE&quot;</value>
              <value>&quot;DK&quot;</value>
              <value>&quot;EE&quot;</value>
              <value>&quot;ES&quot;</value>
              <value>&quot;FI&quot;</value>
              <value>&quot;FR&quot;</value>
              <value>&quot;GB&quot;</value>
              <value>&quot;GE&quot;</value>
              <value>&quot;GR&quot;</value>
              <value>&quot;HR&quot;</value>
              <value>&quot;HU&quot;</value>
              <value>&quot;IE&quot;</value>
              <value>&quot;IT&quot;</value>
              <value>&quot;JE&quot;</value>
              <value>&quot;LU&quot;</value>
              <value>&quot;LV&quot;</value>
              <value>&quot;MD&quot;</value>
              <value>&quot;MT&quot;</value>
              <value>&quot;NL&quot;</value>
              <value>&quot;NO&quot;</value>
              <value>&quot;PL&quot;</value>
              <value>&quot;PT&quot;</value>
              <value>&quot;RO&quot;</value>
              <value>&quot;SI&quot;</value>
              <value>&quot;TR&quot;</value>
              <value>&quot;UA&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;North America&quot;'>
              <value>&quot;CA&quot;</value>
              <value>&quot;US&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;South America&quot;'>
              <value>&quot;AR&quot;</value>
              <value>&quot;BR&quot;</value>
              <value>&quot;CL&quot;</value>
              <value>&quot;CO&quot;</value>
              <value>&quot;EC&quot;</value>
              <value>&quot;HN&quot;</value>
              <value>&quot;MX&quot;</value>
              <value>&quot;PE&quot;</value>
              <value>&quot;PR&quot;</value>
            </bin>
          </calculation>
        </column>
        <column caption='Company Size' datatype='string' name='[company_size]' role='dimension' type='nominal' />
        <column caption='Employee Residence' datatype='string' name='[employee_residence]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
        <column caption='Employment Type' datatype='string' name='[employment_type]' role='dimension' type='nominal' />
        <column caption='Experience Level' datatype='string' name='[experience_level]' role='dimension' type='nominal' />
        <column caption='Job Title' datatype='string' name='[job_title]' role='dimension' type='nominal' />
        <column-instance column='[company_size]' derivation='None' name='[none:company_size:nk]' pivot='key' type='nominal' />
        <column-instance column='[employment_type]' derivation='None' name='[none:employment_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[experience_level]' derivation='None' name='[none:experience_level:nk]' pivot='key' type='nominal' />
        <column-instance column='[job_title]' derivation='None' name='[none:job_title:nk]' pivot='key' type='nominal' />
        <column-instance column='[remote_ratio]' derivation='None' name='[none:remote_ratio:ok]' pivot='key' type='ordinal' />
        <column caption='Remote Ratio' datatype='integer' name='[remote_ratio]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Employee Residence (group)]'>
        <groupfilter function='level-members' level='[Employee Residence (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:company_size:nk]'>
        <groupfilter function='level-members' level='[none:company_size:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:employment_type:nk]'>
        <groupfilter function='level-members' level='[none:employment_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:experience_level:nk]'>
        <groupfilter function='level-members' level='[none:experience_level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:job_title:nk]'>
        <groupfilter function='level-members' level='[none:job_title:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:remote_ratio:ok]'>
        <groupfilter function='level-members' level='[none:remote_ratio:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_8DC2B55EAB244FEF90FC7EDB5761B8C2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Salaries' type='sheet' worksheet='Average Salaries of Employees' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Salaries' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_219D3989747C4233A85775CBFB5A95AD]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Salaries' type='sheet' worksheet='Employment Type vs Salary' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Salaries' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_5C02AE20E4F34D11A7D32426AB3D6B66]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Salaries' type='sheet' worksheet='Salary Across Companies' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Salaries' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_B36B9F5BFDAE4FD28CFE611DB5A4EA27]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Salaries' type='sheet' worksheet='Salaries vs Role' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Salaries' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Average Salaries of Employees'>
      <table>
        <view>
          <datasources>
            <datasource caption='salaries' name='federated.1p6boh80tuqhao16nnaj90lxm1ur' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1p6boh80tuqhao16nnaj90lxm1ur'>
            <column caption='Region' datatype='string' name='[Employee Residence (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[employee_residence]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;DZ&quot;</value>
                  <value>&quot;EG&quot;</value>
                  <value>&quot;GH&quot;</value>
                  <value>&quot;KE&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot;AE&quot;</value>
                  <value>&quot;CN&quot;</value>
                  <value>&quot;HK&quot;</value>
                  <value>&quot;ID&quot;</value>
                  <value>&quot;IL&quot;</value>
                  <value>&quot;IN&quot;</value>
                  <value>&quot;IQ&quot;</value>
                  <value>&quot;IR&quot;</value>
                  <value>&quot;JP&quot;</value>
                  <value>&quot;KR&quot;</value>
                  <value>&quot;KW&quot;</value>
                  <value>&quot;MY&quot;</value>
                  <value>&quot;PH&quot;</value>
                  <value>&quot;PK&quot;</value>
                  <value>&quot;QA&quot;</value>
                  <value>&quot;RU&quot;</value>
                  <value>&quot;SA&quot;</value>
                  <value>&quot;SG&quot;</value>
                  <value>&quot;TH&quot;</value>
                  <value>&quot;UZ&quot;</value>
                  <value>&quot;VN&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Australia&quot;'>
                  <value>&quot;AS&quot;</value>
                  <value>&quot;AU&quot;</value>
                  <value>&quot;BA&quot;</value>
                  <value>&quot;BG&quot;</value>
                  <value>&quot;BO&quot;</value>
                  <value>&quot;CF&quot;</value>
                  <value>&quot;CR&quot;</value>
                  <value>&quot;DO&quot;</value>
                  <value>&quot;LT&quot;</value>
                  <value>&quot;MU&quot;</value>
                  <value>&quot;NG&quot;</value>
                  <value>&quot;NZ&quot;</value>
                  <value>&quot;RS&quot;</value>
                  <value>&quot;SE&quot;</value>
                  <value>&quot;TN&quot;</value>
                  <value>&quot;ZA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;AD&quot;</value>
                  <value>&quot;AM&quot;</value>
                  <value>&quot;AT&quot;</value>
                  <value>&quot;BE&quot;</value>
                  <value>&quot;CH&quot;</value>
                  <value>&quot;CY&quot;</value>
                  <value>&quot;CZ&quot;</value>
                  <value>&quot;DE&quot;</value>
                  <value>&quot;DK&quot;</value>
                  <value>&quot;EE&quot;</value>
                  <value>&quot;ES&quot;</value>
                  <value>&quot;FI&quot;</value>
                  <value>&quot;FR&quot;</value>
                  <value>&quot;GB&quot;</value>
                  <value>&quot;GE&quot;</value>
                  <value>&quot;GR&quot;</value>
                  <value>&quot;HR&quot;</value>
                  <value>&quot;HU&quot;</value>
                  <value>&quot;IE&quot;</value>
                  <value>&quot;IT&quot;</value>
                  <value>&quot;JE&quot;</value>
                  <value>&quot;LU&quot;</value>
                  <value>&quot;LV&quot;</value>
                  <value>&quot;MD&quot;</value>
                  <value>&quot;MT&quot;</value>
                  <value>&quot;NL&quot;</value>
                  <value>&quot;NO&quot;</value>
                  <value>&quot;PL&quot;</value>
                  <value>&quot;PT&quot;</value>
                  <value>&quot;RO&quot;</value>
                  <value>&quot;SI&quot;</value>
                  <value>&quot;TR&quot;</value>
                  <value>&quot;UA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;US&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;AR&quot;</value>
                  <value>&quot;BR&quot;</value>
                  <value>&quot;CL&quot;</value>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;EC&quot;</value>
                  <value>&quot;HN&quot;</value>
                  <value>&quot;MX&quot;</value>
                  <value>&quot;PE&quot;</value>
                  <value>&quot;PR&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[salary_in_usd]' derivation='Avg' name='[avg:salary_in_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Company Size' datatype='string' name='[company_size]' role='dimension' type='nominal' />
            <column caption='Employee Residence' datatype='string' name='[employee_residence]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Employment Type' datatype='string' name='[employment_type]' role='dimension' type='nominal' />
            <column caption='Experience Level' datatype='string' name='[experience_level]' role='dimension' type='nominal' />
            <column caption='Job Title' datatype='string' name='[job_title]' role='dimension' type='nominal' />
            <column-instance column='[company_size]' derivation='None' name='[none:company_size:nk]' pivot='key' type='nominal' />
            <column-instance column='[employee_residence]' derivation='None' name='[none:employee_residence:nk]' pivot='key' type='nominal' />
            <column-instance column='[employment_type]' derivation='None' name='[none:employment_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[experience_level]' derivation='None' name='[none:experience_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[job_title]' derivation='None' name='[none:job_title:nk]' pivot='key' type='nominal' />
            <column-instance column='[remote_ratio]' derivation='None' name='[none:remote_ratio:ok]' pivot='key' type='ordinal' />
            <column caption='Remote Ratio' datatype='integer' name='[remote_ratio]' role='measure' type='quantitative' />
            <column caption='Salary In Usd' datatype='integer' name='[salary_in_usd]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Action (Employment Type,Experience Level)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_219D3989747C4233A85775CBFB5A95AD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[employment_type]' />
              <groupfilter function='level-members' level='[experience_level]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Latitude (generated)]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Longitude (generated)]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Employee Residence (group)]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:experience_level:nk]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:remote_ratio:ok]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:employment_type:nk]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:company_size:nk]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:job_title:nk]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Action (Employment Type,Experience Level)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Longitude (generated)]' field-type='quantitative' max='13040989.157264011' min='-2274244.746439239' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Latitude (generated)]' field-type='quantitative' max='5279217.9694430539' min='-969579.46180766448' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:employee_residence:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:employee_residence:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:employee_residence:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Employee Residence (group)]' value='Regions&#10;'>
              <formatted-text>
                <run>Regions&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[avg:salary_in_usd:qk]' />
              <lod column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:employee_residence:nk]' />
              <color column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Employee Residence (group)]' />
              <size column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[avg:salary_in_usd:qk]' />
              <geometry column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Latitude (generated)]</rows>
        <cols>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E2AF5362-E50B-4849-88B7-4C394B8A4326}' />
    </worksheet>
    <worksheet name='Employment Type vs Salary'>
      <table>
        <view>
          <datasources>
            <datasource caption='salaries' name='federated.1p6boh80tuqhao16nnaj90lxm1ur' />
          </datasources>
          <datasource-dependencies datasource='federated.1p6boh80tuqhao16nnaj90lxm1ur'>
            <column caption='Region' datatype='string' name='[Employee Residence (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[employee_residence]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;DZ&quot;</value>
                  <value>&quot;EG&quot;</value>
                  <value>&quot;GH&quot;</value>
                  <value>&quot;KE&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot;AE&quot;</value>
                  <value>&quot;CN&quot;</value>
                  <value>&quot;HK&quot;</value>
                  <value>&quot;ID&quot;</value>
                  <value>&quot;IL&quot;</value>
                  <value>&quot;IN&quot;</value>
                  <value>&quot;IQ&quot;</value>
                  <value>&quot;IR&quot;</value>
                  <value>&quot;JP&quot;</value>
                  <value>&quot;KR&quot;</value>
                  <value>&quot;KW&quot;</value>
                  <value>&quot;MY&quot;</value>
                  <value>&quot;PH&quot;</value>
                  <value>&quot;PK&quot;</value>
                  <value>&quot;QA&quot;</value>
                  <value>&quot;RU&quot;</value>
                  <value>&quot;SA&quot;</value>
                  <value>&quot;SG&quot;</value>
                  <value>&quot;TH&quot;</value>
                  <value>&quot;UZ&quot;</value>
                  <value>&quot;VN&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Australia&quot;'>
                  <value>&quot;AS&quot;</value>
                  <value>&quot;AU&quot;</value>
                  <value>&quot;BA&quot;</value>
                  <value>&quot;BG&quot;</value>
                  <value>&quot;BO&quot;</value>
                  <value>&quot;CF&quot;</value>
                  <value>&quot;CR&quot;</value>
                  <value>&quot;DO&quot;</value>
                  <value>&quot;LT&quot;</value>
                  <value>&quot;MU&quot;</value>
                  <value>&quot;NG&quot;</value>
                  <value>&quot;NZ&quot;</value>
                  <value>&quot;RS&quot;</value>
                  <value>&quot;SE&quot;</value>
                  <value>&quot;TN&quot;</value>
                  <value>&quot;ZA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;AD&quot;</value>
                  <value>&quot;AM&quot;</value>
                  <value>&quot;AT&quot;</value>
                  <value>&quot;BE&quot;</value>
                  <value>&quot;CH&quot;</value>
                  <value>&quot;CY&quot;</value>
                  <value>&quot;CZ&quot;</value>
                  <value>&quot;DE&quot;</value>
                  <value>&quot;DK&quot;</value>
                  <value>&quot;EE&quot;</value>
                  <value>&quot;ES&quot;</value>
                  <value>&quot;FI&quot;</value>
                  <value>&quot;FR&quot;</value>
                  <value>&quot;GB&quot;</value>
                  <value>&quot;GE&quot;</value>
                  <value>&quot;GR&quot;</value>
                  <value>&quot;HR&quot;</value>
                  <value>&quot;HU&quot;</value>
                  <value>&quot;IE&quot;</value>
                  <value>&quot;IT&quot;</value>
                  <value>&quot;JE&quot;</value>
                  <value>&quot;LU&quot;</value>
                  <value>&quot;LV&quot;</value>
                  <value>&quot;MD&quot;</value>
                  <value>&quot;MT&quot;</value>
                  <value>&quot;NL&quot;</value>
                  <value>&quot;NO&quot;</value>
                  <value>&quot;PL&quot;</value>
                  <value>&quot;PT&quot;</value>
                  <value>&quot;RO&quot;</value>
                  <value>&quot;SI&quot;</value>
                  <value>&quot;TR&quot;</value>
                  <value>&quot;UA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;US&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;AR&quot;</value>
                  <value>&quot;BR&quot;</value>
                  <value>&quot;CL&quot;</value>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;EC&quot;</value>
                  <value>&quot;HN&quot;</value>
                  <value>&quot;MX&quot;</value>
                  <value>&quot;PE&quot;</value>
                  <value>&quot;PR&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[salary_in_usd]' derivation='Avg' name='[avg:salary_in_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Company Size' datatype='string' name='[company_size]' role='dimension' type='nominal' />
            <column caption='Employee Residence' datatype='string' name='[employee_residence]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Employment Type' datatype='string' name='[employment_type]' role='dimension' type='nominal' />
            <column caption='Experience Level' datatype='string' name='[experience_level]' role='dimension' type='nominal' />
            <column caption='Job Title' datatype='string' name='[job_title]' role='dimension' type='nominal' />
            <column-instance column='[company_size]' derivation='None' name='[none:company_size:nk]' pivot='key' type='nominal' />
            <column-instance column='[employment_type]' derivation='None' name='[none:employment_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[experience_level]' derivation='None' name='[none:experience_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[job_title]' derivation='None' name='[none:job_title:nk]' pivot='key' type='nominal' />
            <column-instance column='[remote_ratio]' derivation='None' name='[none:remote_ratio:ok]' pivot='key' type='ordinal' />
            <column caption='Remote Ratio' datatype='integer' name='[remote_ratio]' role='measure' type='quantitative' />
            <column caption='Salary In Usd' datatype='integer' name='[salary_in_usd]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Action (Employee Residence (group),Employee Residence)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_8DC2B55EAB244FEF90FC7EDB5761B8C2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Employee Residence (group)]' />
              <groupfilter function='level-members' level='[employee_residence]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Action (Region,Employee Residence)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_8DC2B55EAB244FEF90FC7EDB5761B8C2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Employee Residence (group)]' />
              <groupfilter function='level-members' level='[employee_residence]' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:experience_level:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;EN&quot;</bucket>
              <bucket>&quot;MI&quot;</bucket>
              <bucket>&quot;SE&quot;</bucket>
              <bucket>&quot;EX&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:employment_type:nk]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:experience_level:nk]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Employee Residence (group)]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:remote_ratio:ok]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:company_size:nk]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:job_title:nk]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Action (Employee Residence (group),Employee Residence)]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Action (Region,Employee Residence)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:employment_type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[avg:salary_in_usd:qk]</rows>
        <cols>([federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:experience_level:nk] / [federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:employment_type:nk])</cols>
      </table>
      <simple-id uuid='{226EF52B-2F51-4124-A269-2885919AB17B}' />
    </worksheet>
    <worksheet name='Salaries Across Countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='salaries' name='federated.1p6boh80tuqhao16nnaj90lxm1ur' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1p6boh80tuqhao16nnaj90lxm1ur'>
            <column caption='Region' datatype='string' name='[Employee Residence (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[employee_residence]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;DZ&quot;</value>
                  <value>&quot;EG&quot;</value>
                  <value>&quot;GH&quot;</value>
                  <value>&quot;KE&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot;AE&quot;</value>
                  <value>&quot;CN&quot;</value>
                  <value>&quot;HK&quot;</value>
                  <value>&quot;ID&quot;</value>
                  <value>&quot;IL&quot;</value>
                  <value>&quot;IN&quot;</value>
                  <value>&quot;IQ&quot;</value>
                  <value>&quot;IR&quot;</value>
                  <value>&quot;JP&quot;</value>
                  <value>&quot;KR&quot;</value>
                  <value>&quot;KW&quot;</value>
                  <value>&quot;MY&quot;</value>
                  <value>&quot;PH&quot;</value>
                  <value>&quot;PK&quot;</value>
                  <value>&quot;QA&quot;</value>
                  <value>&quot;RU&quot;</value>
                  <value>&quot;SA&quot;</value>
                  <value>&quot;SG&quot;</value>
                  <value>&quot;TH&quot;</value>
                  <value>&quot;UZ&quot;</value>
                  <value>&quot;VN&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Australia&quot;'>
                  <value>&quot;AS&quot;</value>
                  <value>&quot;AU&quot;</value>
                  <value>&quot;BA&quot;</value>
                  <value>&quot;BG&quot;</value>
                  <value>&quot;BO&quot;</value>
                  <value>&quot;CF&quot;</value>
                  <value>&quot;CR&quot;</value>
                  <value>&quot;DO&quot;</value>
                  <value>&quot;LT&quot;</value>
                  <value>&quot;MU&quot;</value>
                  <value>&quot;NG&quot;</value>
                  <value>&quot;NZ&quot;</value>
                  <value>&quot;RS&quot;</value>
                  <value>&quot;SE&quot;</value>
                  <value>&quot;TN&quot;</value>
                  <value>&quot;ZA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;AD&quot;</value>
                  <value>&quot;AM&quot;</value>
                  <value>&quot;AT&quot;</value>
                  <value>&quot;BE&quot;</value>
                  <value>&quot;CH&quot;</value>
                  <value>&quot;CY&quot;</value>
                  <value>&quot;CZ&quot;</value>
                  <value>&quot;DE&quot;</value>
                  <value>&quot;DK&quot;</value>
                  <value>&quot;EE&quot;</value>
                  <value>&quot;ES&quot;</value>
                  <value>&quot;FI&quot;</value>
                  <value>&quot;FR&quot;</value>
                  <value>&quot;GB&quot;</value>
                  <value>&quot;GE&quot;</value>
                  <value>&quot;GR&quot;</value>
                  <value>&quot;HR&quot;</value>
                  <value>&quot;HU&quot;</value>
                  <value>&quot;IE&quot;</value>
                  <value>&quot;IT&quot;</value>
                  <value>&quot;JE&quot;</value>
                  <value>&quot;LU&quot;</value>
                  <value>&quot;LV&quot;</value>
                  <value>&quot;MD&quot;</value>
                  <value>&quot;MT&quot;</value>
                  <value>&quot;NL&quot;</value>
                  <value>&quot;NO&quot;</value>
                  <value>&quot;PL&quot;</value>
                  <value>&quot;PT&quot;</value>
                  <value>&quot;RO&quot;</value>
                  <value>&quot;SI&quot;</value>
                  <value>&quot;TR&quot;</value>
                  <value>&quot;UA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;US&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;AR&quot;</value>
                  <value>&quot;BR&quot;</value>
                  <value>&quot;CL&quot;</value>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;EC&quot;</value>
                  <value>&quot;HN&quot;</value>
                  <value>&quot;MX&quot;</value>
                  <value>&quot;PE&quot;</value>
                  <value>&quot;PR&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[salary_in_usd]' derivation='Avg' name='[avg:salary_in_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Company Location' datatype='string' name='[company_location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Company Size' datatype='string' name='[company_size]' role='dimension' type='nominal' />
            <column caption='Employee Residence' datatype='string' name='[employee_residence]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Employment Type' datatype='string' name='[employment_type]' role='dimension' type='nominal' />
            <column caption='Experience Level' datatype='string' name='[experience_level]' role='dimension' type='nominal' />
            <column caption='Job Title' datatype='string' name='[job_title]' role='dimension' type='nominal' />
            <column-instance column='[company_location]' derivation='None' name='[none:company_location:nk]' pivot='key' type='nominal' />
            <column-instance column='[company_size]' derivation='None' name='[none:company_size:nk]' pivot='key' type='nominal' />
            <column-instance column='[employment_type]' derivation='None' name='[none:employment_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[experience_level]' derivation='None' name='[none:experience_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[job_title]' derivation='None' name='[none:job_title:nk]' pivot='key' type='nominal' />
            <column-instance column='[remote_ratio]' derivation='None' name='[none:remote_ratio:ok]' pivot='key' type='ordinal' />
            <column caption='Remote Ratio' datatype='integer' name='[remote_ratio]' role='measure' type='quantitative' />
            <column caption='Salary In Usd' datatype='integer' name='[salary_in_usd]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Longitude (generated)]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Employee Residence (group)]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:experience_level:nk]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:remote_ratio:ok]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:employment_type:nk]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:company_size:nk]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:job_title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Longitude (generated)]' field-type='quantitative' max='19963084.312547356' min='-19890937.143314064' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Latitude (generated)]' field-type='quantitative' max='13122005.93794249' min='-6142123.3833663287' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[avg:salary_in_usd:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:company_location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:company_location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:company_location:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[avg:salary_in_usd:qk]' />
              <text column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[avg:salary_in_usd:qk]' />
              <lod column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:company_location:nk]' />
              <geometry column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Latitude (generated)]</rows>
        <cols>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2345FF4D-2A45-492E-A1B5-7E23EFEADF2E}' />
    </worksheet>
    <worksheet name='Salaries vs Role'>
      <table>
        <view>
          <datasources>
            <datasource caption='salaries' name='federated.1p6boh80tuqhao16nnaj90lxm1ur' />
          </datasources>
          <datasource-dependencies datasource='federated.1p6boh80tuqhao16nnaj90lxm1ur'>
            <column caption='Region' datatype='string' name='[Employee Residence (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[employee_residence]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;DZ&quot;</value>
                  <value>&quot;EG&quot;</value>
                  <value>&quot;GH&quot;</value>
                  <value>&quot;KE&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot;AE&quot;</value>
                  <value>&quot;CN&quot;</value>
                  <value>&quot;HK&quot;</value>
                  <value>&quot;ID&quot;</value>
                  <value>&quot;IL&quot;</value>
                  <value>&quot;IN&quot;</value>
                  <value>&quot;IQ&quot;</value>
                  <value>&quot;IR&quot;</value>
                  <value>&quot;JP&quot;</value>
                  <value>&quot;KR&quot;</value>
                  <value>&quot;KW&quot;</value>
                  <value>&quot;MY&quot;</value>
                  <value>&quot;PH&quot;</value>
                  <value>&quot;PK&quot;</value>
                  <value>&quot;QA&quot;</value>
                  <value>&quot;RU&quot;</value>
                  <value>&quot;SA&quot;</value>
                  <value>&quot;SG&quot;</value>
                  <value>&quot;TH&quot;</value>
                  <value>&quot;UZ&quot;</value>
                  <value>&quot;VN&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Australia&quot;'>
                  <value>&quot;AS&quot;</value>
                  <value>&quot;AU&quot;</value>
                  <value>&quot;BA&quot;</value>
                  <value>&quot;BG&quot;</value>
                  <value>&quot;BO&quot;</value>
                  <value>&quot;CF&quot;</value>
                  <value>&quot;CR&quot;</value>
                  <value>&quot;DO&quot;</value>
                  <value>&quot;LT&quot;</value>
                  <value>&quot;MU&quot;</value>
                  <value>&quot;NG&quot;</value>
                  <value>&quot;NZ&quot;</value>
                  <value>&quot;RS&quot;</value>
                  <value>&quot;SE&quot;</value>
                  <value>&quot;TN&quot;</value>
                  <value>&quot;ZA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;AD&quot;</value>
                  <value>&quot;AM&quot;</value>
                  <value>&quot;AT&quot;</value>
                  <value>&quot;BE&quot;</value>
                  <value>&quot;CH&quot;</value>
                  <value>&quot;CY&quot;</value>
                  <value>&quot;CZ&quot;</value>
                  <value>&quot;DE&quot;</value>
                  <value>&quot;DK&quot;</value>
                  <value>&quot;EE&quot;</value>
                  <value>&quot;ES&quot;</value>
                  <value>&quot;FI&quot;</value>
                  <value>&quot;FR&quot;</value>
                  <value>&quot;GB&quot;</value>
                  <value>&quot;GE&quot;</value>
                  <value>&quot;GR&quot;</value>
                  <value>&quot;HR&quot;</value>
                  <value>&quot;HU&quot;</value>
                  <value>&quot;IE&quot;</value>
                  <value>&quot;IT&quot;</value>
                  <value>&quot;JE&quot;</value>
                  <value>&quot;LU&quot;</value>
                  <value>&quot;LV&quot;</value>
                  <value>&quot;MD&quot;</value>
                  <value>&quot;MT&quot;</value>
                  <value>&quot;NL&quot;</value>
                  <value>&quot;NO&quot;</value>
                  <value>&quot;PL&quot;</value>
                  <value>&quot;PT&quot;</value>
                  <value>&quot;RO&quot;</value>
                  <value>&quot;SI&quot;</value>
                  <value>&quot;TR&quot;</value>
                  <value>&quot;UA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;US&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;AR&quot;</value>
                  <value>&quot;BR&quot;</value>
                  <value>&quot;CL&quot;</value>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;EC&quot;</value>
                  <value>&quot;HN&quot;</value>
                  <value>&quot;MX&quot;</value>
                  <value>&quot;PE&quot;</value>
                  <value>&quot;PR&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[salary_in_usd]' derivation='Avg' name='[avg:salary_in_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Company Size' datatype='string' name='[company_size]' role='dimension' type='nominal' />
            <column caption='Employee Residence' datatype='string' name='[employee_residence]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Employment Type' datatype='string' name='[employment_type]' role='dimension' type='nominal' />
            <column caption='Experience Level' datatype='string' name='[experience_level]' role='dimension' type='nominal' />
            <column caption='Job Title' datatype='string' name='[job_title]' role='dimension' type='nominal' />
            <column-instance column='[company_size]' derivation='None' name='[none:company_size:nk]' pivot='key' type='nominal' />
            <column-instance column='[employment_type]' derivation='None' name='[none:employment_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[experience_level]' derivation='None' name='[none:experience_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[job_title]' derivation='None' name='[none:job_title:nk]' pivot='key' type='nominal' />
            <column-instance column='[remote_ratio]' derivation='None' name='[none:remote_ratio:ok]' pivot='key' type='ordinal' />
            <column caption='Remote Ratio' datatype='integer' name='[remote_ratio]' role='measure' type='quantitative' />
            <column caption='Salary In Usd' datatype='integer' name='[salary_in_usd]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Action (Employee Residence (group),Employee Residence)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_8DC2B55EAB244FEF90FC7EDB5761B8C2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Employee Residence (group)]' />
              <groupfilter function='level-members' level='[employee_residence]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Action (Employment Type,Experience Level)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_219D3989747C4233A85775CBFB5A95AD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[employment_type]' />
              <groupfilter function='level-members' level='[experience_level]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Action (Region,Employee Residence)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_8DC2B55EAB244FEF90FC7EDB5761B8C2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Employee Residence (group)]' />
              <groupfilter function='level-members' level='[employee_residence]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:remote_ratio:ok]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:job_title:nk]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Employee Residence (group)]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:experience_level:nk]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:employment_type:nk]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:company_size:nk]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Action (Employment Type,Experience Level)]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Action (Employee Residence (group),Employee Residence)]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Action (Region,Employee Residence)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='18' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:job_title:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[avg:salary_in_usd:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[avg:salary_in_usd:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[avg:salary_in_usd:qk]</rows>
        <cols>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:job_title:nk]</cols>
      </table>
      <simple-id uuid='{2E91402E-65B6-468B-BAAD-F395900F604F}' />
    </worksheet>
    <worksheet name='Salary Across Companies'>
      <table>
        <view>
          <datasources>
            <datasource caption='salaries' name='federated.1p6boh80tuqhao16nnaj90lxm1ur' />
          </datasources>
          <datasource-dependencies datasource='federated.1p6boh80tuqhao16nnaj90lxm1ur'>
            <column caption='Region' datatype='string' name='[Employee Residence (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[employee_residence]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;DZ&quot;</value>
                  <value>&quot;EG&quot;</value>
                  <value>&quot;GH&quot;</value>
                  <value>&quot;KE&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot;AE&quot;</value>
                  <value>&quot;CN&quot;</value>
                  <value>&quot;HK&quot;</value>
                  <value>&quot;ID&quot;</value>
                  <value>&quot;IL&quot;</value>
                  <value>&quot;IN&quot;</value>
                  <value>&quot;IQ&quot;</value>
                  <value>&quot;IR&quot;</value>
                  <value>&quot;JP&quot;</value>
                  <value>&quot;KR&quot;</value>
                  <value>&quot;KW&quot;</value>
                  <value>&quot;MY&quot;</value>
                  <value>&quot;PH&quot;</value>
                  <value>&quot;PK&quot;</value>
                  <value>&quot;QA&quot;</value>
                  <value>&quot;RU&quot;</value>
                  <value>&quot;SA&quot;</value>
                  <value>&quot;SG&quot;</value>
                  <value>&quot;TH&quot;</value>
                  <value>&quot;UZ&quot;</value>
                  <value>&quot;VN&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Australia&quot;'>
                  <value>&quot;AS&quot;</value>
                  <value>&quot;AU&quot;</value>
                  <value>&quot;BA&quot;</value>
                  <value>&quot;BG&quot;</value>
                  <value>&quot;BO&quot;</value>
                  <value>&quot;CF&quot;</value>
                  <value>&quot;CR&quot;</value>
                  <value>&quot;DO&quot;</value>
                  <value>&quot;LT&quot;</value>
                  <value>&quot;MU&quot;</value>
                  <value>&quot;NG&quot;</value>
                  <value>&quot;NZ&quot;</value>
                  <value>&quot;RS&quot;</value>
                  <value>&quot;SE&quot;</value>
                  <value>&quot;TN&quot;</value>
                  <value>&quot;ZA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;AD&quot;</value>
                  <value>&quot;AM&quot;</value>
                  <value>&quot;AT&quot;</value>
                  <value>&quot;BE&quot;</value>
                  <value>&quot;CH&quot;</value>
                  <value>&quot;CY&quot;</value>
                  <value>&quot;CZ&quot;</value>
                  <value>&quot;DE&quot;</value>
                  <value>&quot;DK&quot;</value>
                  <value>&quot;EE&quot;</value>
                  <value>&quot;ES&quot;</value>
                  <value>&quot;FI&quot;</value>
                  <value>&quot;FR&quot;</value>
                  <value>&quot;GB&quot;</value>
                  <value>&quot;GE&quot;</value>
                  <value>&quot;GR&quot;</value>
                  <value>&quot;HR&quot;</value>
                  <value>&quot;HU&quot;</value>
                  <value>&quot;IE&quot;</value>
                  <value>&quot;IT&quot;</value>
                  <value>&quot;JE&quot;</value>
                  <value>&quot;LU&quot;</value>
                  <value>&quot;LV&quot;</value>
                  <value>&quot;MD&quot;</value>
                  <value>&quot;MT&quot;</value>
                  <value>&quot;NL&quot;</value>
                  <value>&quot;NO&quot;</value>
                  <value>&quot;PL&quot;</value>
                  <value>&quot;PT&quot;</value>
                  <value>&quot;RO&quot;</value>
                  <value>&quot;SI&quot;</value>
                  <value>&quot;TR&quot;</value>
                  <value>&quot;UA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;US&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;AR&quot;</value>
                  <value>&quot;BR&quot;</value>
                  <value>&quot;CL&quot;</value>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;EC&quot;</value>
                  <value>&quot;HN&quot;</value>
                  <value>&quot;MX&quot;</value>
                  <value>&quot;PE&quot;</value>
                  <value>&quot;PR&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[salary_in_usd]' derivation='Avg' name='[avg:salary_in_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Company Size' datatype='string' name='[company_size]' role='dimension' type='nominal' />
            <column caption='Employee Residence' datatype='string' name='[employee_residence]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Employment Type' datatype='string' name='[employment_type]' role='dimension' type='nominal' />
            <column caption='Experience Level' datatype='string' name='[experience_level]' role='dimension' type='nominal' />
            <column caption='Job Title' datatype='string' name='[job_title]' role='dimension' type='nominal' />
            <column-instance column='[company_size]' derivation='None' name='[none:company_size:nk]' pivot='key' type='nominal' />
            <column-instance column='[employment_type]' derivation='None' name='[none:employment_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[experience_level]' derivation='None' name='[none:experience_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[job_title]' derivation='None' name='[none:job_title:nk]' pivot='key' type='nominal' />
            <column-instance column='[remote_ratio]' derivation='None' name='[none:remote_ratio:ok]' pivot='key' type='ordinal' />
            <column caption='Remote Ratio' datatype='integer' name='[remote_ratio]' role='measure' type='quantitative' />
            <column caption='Salary In Usd' datatype='integer' name='[salary_in_usd]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Action (Employee Residence (group),Employee Residence)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_8DC2B55EAB244FEF90FC7EDB5761B8C2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Employee Residence (group)]' />
              <groupfilter function='level-members' level='[employee_residence]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Action (Employment Type,Experience Level)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_219D3989747C4233A85775CBFB5A95AD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[employment_type]' />
              <groupfilter function='level-members' level='[experience_level]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Action (Region,Employee Residence)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_8DC2B55EAB244FEF90FC7EDB5761B8C2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Employee Residence (group)]' />
              <groupfilter function='level-members' level='[employee_residence]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:company_size:nk]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:remote_ratio:ok]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Employee Residence (group)]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:experience_level:nk]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:employment_type:nk]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:job_title:nk]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Action (Employment Type,Experience Level)]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Action (Employee Residence (group),Employee Residence)]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Action (Region,Employee Residence)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:company_size:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[avg:salary_in_usd:qk]</rows>
        <cols>([federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:company_size:nk] / [federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:employment_type:nk])</cols>
      </table>
      <simple-id uuid='{C9DCC992-2917-42B8-BD55-8469444B7116}' />
    </worksheet>
    <worksheet name='Salary Vs Role Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='salaries' name='federated.1p6boh80tuqhao16nnaj90lxm1ur' />
          </datasources>
          <datasource-dependencies datasource='federated.1p6boh80tuqhao16nnaj90lxm1ur'>
            <column caption='Region' datatype='string' name='[Employee Residence (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[employee_residence]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;DZ&quot;</value>
                  <value>&quot;EG&quot;</value>
                  <value>&quot;GH&quot;</value>
                  <value>&quot;KE&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot;AE&quot;</value>
                  <value>&quot;CN&quot;</value>
                  <value>&quot;HK&quot;</value>
                  <value>&quot;ID&quot;</value>
                  <value>&quot;IL&quot;</value>
                  <value>&quot;IN&quot;</value>
                  <value>&quot;IQ&quot;</value>
                  <value>&quot;IR&quot;</value>
                  <value>&quot;JP&quot;</value>
                  <value>&quot;KR&quot;</value>
                  <value>&quot;KW&quot;</value>
                  <value>&quot;MY&quot;</value>
                  <value>&quot;PH&quot;</value>
                  <value>&quot;PK&quot;</value>
                  <value>&quot;QA&quot;</value>
                  <value>&quot;RU&quot;</value>
                  <value>&quot;SA&quot;</value>
                  <value>&quot;SG&quot;</value>
                  <value>&quot;TH&quot;</value>
                  <value>&quot;UZ&quot;</value>
                  <value>&quot;VN&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Australia&quot;'>
                  <value>&quot;AS&quot;</value>
                  <value>&quot;AU&quot;</value>
                  <value>&quot;BA&quot;</value>
                  <value>&quot;BG&quot;</value>
                  <value>&quot;BO&quot;</value>
                  <value>&quot;CF&quot;</value>
                  <value>&quot;CR&quot;</value>
                  <value>&quot;DO&quot;</value>
                  <value>&quot;LT&quot;</value>
                  <value>&quot;MU&quot;</value>
                  <value>&quot;NG&quot;</value>
                  <value>&quot;NZ&quot;</value>
                  <value>&quot;RS&quot;</value>
                  <value>&quot;SE&quot;</value>
                  <value>&quot;TN&quot;</value>
                  <value>&quot;ZA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;AD&quot;</value>
                  <value>&quot;AM&quot;</value>
                  <value>&quot;AT&quot;</value>
                  <value>&quot;BE&quot;</value>
                  <value>&quot;CH&quot;</value>
                  <value>&quot;CY&quot;</value>
                  <value>&quot;CZ&quot;</value>
                  <value>&quot;DE&quot;</value>
                  <value>&quot;DK&quot;</value>
                  <value>&quot;EE&quot;</value>
                  <value>&quot;ES&quot;</value>
                  <value>&quot;FI&quot;</value>
                  <value>&quot;FR&quot;</value>
                  <value>&quot;GB&quot;</value>
                  <value>&quot;GE&quot;</value>
                  <value>&quot;GR&quot;</value>
                  <value>&quot;HR&quot;</value>
                  <value>&quot;HU&quot;</value>
                  <value>&quot;IE&quot;</value>
                  <value>&quot;IT&quot;</value>
                  <value>&quot;JE&quot;</value>
                  <value>&quot;LU&quot;</value>
                  <value>&quot;LV&quot;</value>
                  <value>&quot;MD&quot;</value>
                  <value>&quot;MT&quot;</value>
                  <value>&quot;NL&quot;</value>
                  <value>&quot;NO&quot;</value>
                  <value>&quot;PL&quot;</value>
                  <value>&quot;PT&quot;</value>
                  <value>&quot;RO&quot;</value>
                  <value>&quot;SI&quot;</value>
                  <value>&quot;TR&quot;</value>
                  <value>&quot;UA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;US&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;AR&quot;</value>
                  <value>&quot;BR&quot;</value>
                  <value>&quot;CL&quot;</value>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;EC&quot;</value>
                  <value>&quot;HN&quot;</value>
                  <value>&quot;MX&quot;</value>
                  <value>&quot;PE&quot;</value>
                  <value>&quot;PR&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[salary_in_usd]' derivation='Avg' name='[avg:salary_in_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Company Size' datatype='string' name='[company_size]' role='dimension' type='nominal' />
            <column caption='Employee Residence' datatype='string' name='[employee_residence]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Employment Type' datatype='string' name='[employment_type]' role='dimension' type='nominal' />
            <column caption='Experience Level' datatype='string' name='[experience_level]' role='dimension' type='nominal' />
            <column caption='Job Title' datatype='string' name='[job_title]' role='dimension' type='nominal' />
            <column-instance column='[company_size]' derivation='None' name='[none:company_size:nk]' pivot='key' type='nominal' />
            <column-instance column='[employment_type]' derivation='None' name='[none:employment_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[experience_level]' derivation='None' name='[none:experience_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[job_title]' derivation='None' name='[none:job_title:nk]' pivot='key' type='nominal' />
            <column-instance column='[remote_ratio]' derivation='None' name='[none:remote_ratio:ok]' pivot='key' type='ordinal' />
            <column-instance column='[work_year]' derivation='None' name='[none:work_year:qk]' pivot='key' type='quantitative' />
            <column caption='Remote Ratio' datatype='integer' name='[remote_ratio]' role='measure' type='quantitative' />
            <column caption='Salary In Usd' datatype='integer' name='[salary_in_usd]' role='measure' type='quantitative' />
            <column caption='Work Year' datatype='integer' name='[work_year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:remote_ratio:ok]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Employee Residence (group)]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:experience_level:nk]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:employment_type:nk]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:company_size:nk]</column>
            <column>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:job_title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[avg:salary_in_usd:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='width' field='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[avg:salary_in_usd:qk]' value='80' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='823' />
                <format attr='maxwidth' value='823' />
                <format attr='minheight' value='640' />
                <format attr='maxheight' value='640' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[avg:salary_in_usd:qk]</rows>
        <cols>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:work_year:qk]</cols>
      </table>
      <simple-id uuid='{CDC7F0D9-193D-480A-960A-6A15D234F3E2}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Salaries'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='salaries' name='federated.1p6boh80tuqhao16nnaj90lxm1ur' />
      </datasources>
      <datasource-dependencies datasource='federated.1p6boh80tuqhao16nnaj90lxm1ur'>
        <column caption='Region' datatype='string' name='[Employee Residence (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='categorical-bin' column='[employee_residence]' new-bin='true'>
            <bin default-name='false' value='&quot;Africa&quot;'>
              <value>&quot;DZ&quot;</value>
              <value>&quot;EG&quot;</value>
              <value>&quot;GH&quot;</value>
              <value>&quot;KE&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Asia&quot;'>
              <value>&quot;AE&quot;</value>
              <value>&quot;CN&quot;</value>
              <value>&quot;HK&quot;</value>
              <value>&quot;ID&quot;</value>
              <value>&quot;IL&quot;</value>
              <value>&quot;IN&quot;</value>
              <value>&quot;IQ&quot;</value>
              <value>&quot;IR&quot;</value>
              <value>&quot;JP&quot;</value>
              <value>&quot;KR&quot;</value>
              <value>&quot;KW&quot;</value>
              <value>&quot;MY&quot;</value>
              <value>&quot;PH&quot;</value>
              <value>&quot;PK&quot;</value>
              <value>&quot;QA&quot;</value>
              <value>&quot;RU&quot;</value>
              <value>&quot;SA&quot;</value>
              <value>&quot;SG&quot;</value>
              <value>&quot;TH&quot;</value>
              <value>&quot;UZ&quot;</value>
              <value>&quot;VN&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Australia&quot;'>
              <value>&quot;AS&quot;</value>
              <value>&quot;AU&quot;</value>
              <value>&quot;BA&quot;</value>
              <value>&quot;BG&quot;</value>
              <value>&quot;BO&quot;</value>
              <value>&quot;CF&quot;</value>
              <value>&quot;CR&quot;</value>
              <value>&quot;DO&quot;</value>
              <value>&quot;LT&quot;</value>
              <value>&quot;MU&quot;</value>
              <value>&quot;NG&quot;</value>
              <value>&quot;NZ&quot;</value>
              <value>&quot;RS&quot;</value>
              <value>&quot;SE&quot;</value>
              <value>&quot;TN&quot;</value>
              <value>&quot;ZA&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Europe&quot;'>
              <value>&quot;AD&quot;</value>
              <value>&quot;AM&quot;</value>
              <value>&quot;AT&quot;</value>
              <value>&quot;BE&quot;</value>
              <value>&quot;CH&quot;</value>
              <value>&quot;CY&quot;</value>
              <value>&quot;CZ&quot;</value>
              <value>&quot;DE&quot;</value>
              <value>&quot;DK&quot;</value>
              <value>&quot;EE&quot;</value>
              <value>&quot;ES&quot;</value>
              <value>&quot;FI&quot;</value>
              <value>&quot;FR&quot;</value>
              <value>&quot;GB&quot;</value>
              <value>&quot;GE&quot;</value>
              <value>&quot;GR&quot;</value>
              <value>&quot;HR&quot;</value>
              <value>&quot;HU&quot;</value>
              <value>&quot;IE&quot;</value>
              <value>&quot;IT&quot;</value>
              <value>&quot;JE&quot;</value>
              <value>&quot;LU&quot;</value>
              <value>&quot;LV&quot;</value>
              <value>&quot;MD&quot;</value>
              <value>&quot;MT&quot;</value>
              <value>&quot;NL&quot;</value>
              <value>&quot;NO&quot;</value>
              <value>&quot;PL&quot;</value>
              <value>&quot;PT&quot;</value>
              <value>&quot;RO&quot;</value>
              <value>&quot;SI&quot;</value>
              <value>&quot;TR&quot;</value>
              <value>&quot;UA&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;North America&quot;'>
              <value>&quot;CA&quot;</value>
              <value>&quot;US&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;South America&quot;'>
              <value>&quot;AR&quot;</value>
              <value>&quot;BR&quot;</value>
              <value>&quot;CL&quot;</value>
              <value>&quot;CO&quot;</value>
              <value>&quot;EC&quot;</value>
              <value>&quot;HN&quot;</value>
              <value>&quot;MX&quot;</value>
              <value>&quot;PE&quot;</value>
              <value>&quot;PR&quot;</value>
            </bin>
          </calculation>
        </column>
        <column caption='Company Size' datatype='string' name='[company_size]' role='dimension' type='nominal' />
        <column caption='Employee Residence' datatype='string' name='[employee_residence]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
        <column caption='Employment Type' datatype='string' name='[employment_type]' role='dimension' type='nominal' />
        <column caption='Experience Level' datatype='string' name='[experience_level]' role='dimension' type='nominal' />
        <column caption='Job Title' datatype='string' name='[job_title]' role='dimension' type='nominal' />
        <column-instance column='[company_size]' derivation='None' name='[none:company_size:nk]' pivot='key' type='nominal' />
        <column-instance column='[employment_type]' derivation='None' name='[none:employment_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[experience_level]' derivation='None' name='[none:experience_level:nk]' pivot='key' type='nominal' />
        <column-instance column='[job_title]' derivation='None' name='[none:job_title:nk]' pivot='key' type='nominal' />
        <column-instance column='[remote_ratio]' derivation='None' name='[none:remote_ratio:ok]' pivot='key' type='ordinal' />
        <column caption='Remote Ratio' datatype='integer' name='[remote_ratio]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='7' param='horz' type-v2='layout-flow' w='99152' x='424' y='940'>
            <zone h='98120' id='5' type-v2='layout-basic' w='99152' x='424' y='940'>
              <zone h='58163' id='3' name='Average Salaries of Employees' w='70650' x='424' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39957' id='9' name='Salary Across Companies' w='30685' x='424' y='59103'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39957' id='11' name='Employment Type vs Salary' w='37772' x='61804' y='59103'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39957' id='17' name='Salaries vs Role' w='30695' x='31109' y='59103'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23968' id='8' name='Average Salaries of Employees' param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Employee Residence (group)]' type-v2='filter' w='11493' x='71074' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='17391' id='12' name='Employment Type vs Salary' param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:experience_level:nk]' type-v2='filter' w='8268' x='82567' y='41712'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='17391' id='13' name='Employment Type vs Salary' param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:employment_type:nk]' type-v2='filter' w='8741' x='90835' y='41712'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16804' id='10' name='Salary Across Companies' param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:company_size:nk]' type-v2='filter' w='11493' x='71074' y='24908'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='17391' id='19' name='Salaries vs Role' param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:remote_ratio:ok]' type-v2='filter' w='11493' x='71074' y='41712'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='40772' id='18' name='Salaries vs Role' param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:job_title:nk]' type-v2='filter' w='17009' x='82567' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='20' param='vert' type-v2='layout-flow' w='99152' x='424' y='940'>
                <zone h='23968' id='8' mode='checkdropdown' name='Average Salaries of Employees' param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Employee Residence (group)]' type-v2='filter' w='11493' x='71074' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58163' id='3' is-fixed='true' name='Average Salaries of Employees' w='70650' x='424' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16804' id='10' mode='checkdropdown' name='Salary Across Companies' param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:company_size:nk]' type-v2='filter' w='11493' x='71074' y='24908'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39957' id='9' is-fixed='true' name='Salary Across Companies' w='30685' x='424' y='59103'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17391' id='19' mode='checkdropdown' name='Salaries vs Role' param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:remote_ratio:ok]' type-v2='filter' w='11493' x='71074' y='41712'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='40772' id='18' mode='checkdropdown' name='Salaries vs Role' param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:job_title:nk]' type-v2='filter' w='17009' x='82567' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39957' id='17' is-fixed='true' name='Salaries vs Role' w='30695' x='31109' y='59103'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17391' id='12' mode='checkdropdown' name='Employment Type vs Salary' param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:experience_level:nk]' type-v2='filter' w='8268' x='82567' y='41712'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17391' id='13' mode='checkdropdown' name='Employment Type vs Salary' param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:employment_type:nk]' type-v2='filter' w='8741' x='90835' y='41712'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39957' id='11' is-fixed='true' name='Employment Type vs Salary' w='37772' x='61804' y='59103'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{07A4F868-8238-4370-9D78-4CC7C1B603F0}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' show-side-pane='false' source-height='37'>
    <window class='worksheet' name='Salaries Across Countries'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[avg:salary_in_usd:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[avg:salary_in_usd:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A4FDA2F-FF46-49EB-8CD7-07F35D42043B}' />
    </window>
    <window class='worksheet' name='Salaries vs Role'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:job_title:nk]' type='filter' />
            <card param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:remote_ratio:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[avg:salary_in_usd:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:company_location:nk]</field>
            <field>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:job_title:nk]</field>
            <field>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:remote_ratio:qk]</field>
            <field>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:work_year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D413ECED-57ED-40BF-8657-6646717247CC}' />
    </window>
    <window class='worksheet' name='Salary Vs Role Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:remote_ratio:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:Calculation_2563111151598837761:nk]</field>
            <field>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:job_title:nk]</field>
            <field>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:remote_ratio:qk]</field>
            <field>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:work_year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AE075465-D990-46BC-A46B-3F5120B3467C}' />
    </window>
    <window class='worksheet' name='Employment Type vs Salary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:experience_level:nk]' type='filter' />
            <card param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:employment_type:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:employment_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:employment_type:nk]</field>
            <field>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:experience_level:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0EAA8763-456A-42AC-91B2-087C998A4BE9}' />
    </window>
    <window class='worksheet' name='Salary Across Companies'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:remote_ratio:ok]' type='filter' />
            <card param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:company_size:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:company_size:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:company_size:nk]</field>
            <field>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:employment_type:nk]</field>
            <field>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:remote_ratio:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CCA06A5D-1FFA-47D4-980A-E9132B0FF778}' />
    </window>
    <window class='worksheet' name='Average Salaries of Employees'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card pane-specification-id='0' param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Employee Residence (group)]' type='color' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Employee Residence (group)]' type='filter' />
            <card pane-specification-id='0' param='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[avg:salary_in_usd:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Employee Residence (group)]</field>
            <field>[federated.1p6boh80tuqhao16nnaj90lxm1ur].[none:employee_residence:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6D1A7418-EB73-4C86-80FA-DB67ECF2B7B4}' />
    </window>
    <window class='dashboard' maximized='true' name='Salaries'>
      <viewpoints>
        <viewpoint name='Average Salaries of Employees'>
          <zoom type='entire-view' />
          <highlight field='[federated.1p6boh80tuqhao16nnaj90lxm1ur].[Employee Residence (group)]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Employment Type vs Salary'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Salaries vs Role'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Salary Across Companies'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='4' />
      <simple-id uuid='{F4A64DE0-C311-406D-A5C2-BD951EBFCF4E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Salaries of Employees' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Employment Type vs Salary' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Salaries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Salaries Across Countries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Salaries vs Role' width='192'>
      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
      KeT/Bw7u+dagdE7zAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Salary Across Companies' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Salary Vs Role Type' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAagklEQVR4nO3daXAb95nn8S8uggQBkABP8BJPibplSZZk2ZaPOLZzzW6c8dbM7Capqa3J
      i71rq2a3al6ksrUvd97t1mR2JrU1qdTuZqemMnFsj+34nDiWLduSdZMiwfsAiPu+u//7Qpai
      g7QJigC6if+nym8Ekvih3Q/6j+4HTxuEEAJJqlPGWgeQpFqqaAGoqoqqqpV8im2nKEqtI5RN
      b5m1lFceAe6hxxWh3jJrKa8sAKmuyQKQ6posAKmuyQKQ6posAKmuyQKQ6posAKmumcv9hXw6
      ztTiGgf2DHH16nUcrk4aRI5YKstAn4eC0UYmFqKvr7cSeSVpW5VdAJismCmhFAtkszkcbgPJ
      RAJVWKCU5fLEDfaM7799FVgIoaurwaqqUiqVah2jLHrLrKW8ZReAtbERgwGMJguHjhxlanKC
      kbExDNkgc7447e3tpNNpDG47RuPNFZbBYNj24JVkMplqHaFsesuslbxlF0AksEo+XyQYS5KK
      hujo6SefjhOIlhgbGaCAlXw6DgYDfH7JW28FoLe8oL/MWslrqGQ79K2lz60jgR6USiXM5vJX
      hrWkt8xayqufPVOSKkAWgFTXZAFIdU0WgFTXZAFIdU0WgFTXZAFIdU0WgFS3CkVFFoBUn4QQ
      /OzXl8ovgFI+g3duAdQSk9evMr/kIxEOcH1ymmIuRSJbJBAIVCKzJG2bD68tE4imy+8FKhQV
      sukkpWKOcDTBSGcvvuAawx4Hc/OrJPIFOrt6EELcHn+hp25QvXWvgv4y1zqvP5LiF7+Z4M/+
      xWPlF4DN7sBiNmKy2HjkkVNcvXKVhkYrRqMBIQTFYvF2ExxoawbMZtxZuHqht8y1zFssqfz4
      l5/y3WcP0dJs3Vo3aCqVYS0UIhYK4WzroNUKNxYT7Bn20C2ayMRDYDBg+Pw/PTXDCSE006q7
      WXrLXKu8Qgj+79tXODLWzeHRbkB2g95HS52Km6W3zLXKe+76Cm+dn+U//9GjmE0390n97JmS
      9AD8kRR/++41/tU/PX575wdZAFIdKBQV/uKXn/D95w/jcjTd9ZgsAGlHE0Lw/965yv7BDg4O
      d973uCwAaUc7P+Vjzh/jhTN71/0apiwAacdai6b4P29d4d++cAKLef2zTrIApB2pUFL4y5fO
      873n7l/330kWgLTjCCH4u/eus7vPzeGRri/8WVkA0o5zeWaNG4thfv/JfV86fkUWgLSjhBMZ
      fvr6Jf7975/ccN1/p7Ivx+VSMaYW1zi0bw+ZWID5cJ4Wc4F4Os9AbzcFUzPpaJD+/r4tvQBJ
      2qqSovKXL53nD75yALdz43X/ncouAKOlCYtBQaglFvwxQCWdL6AoRlCyfHZpkv0HDul2NqiW
      7mC4WXrLXKm8v/jNJB53M0fHujY9e7TsAmiwWjEYIJuMkM3lCIbDPHLiYcyFMHO+BB6Ph2Qi
      QZerWc4GrSK9Zd7uvFdnA1yZC/LD75/BZNr8yn5L3aCFQom00sjRI4eIxeOo+TRLMYXdo7so
      0EA+nZCzQatMb5m3M28kmeVv3rjEn/7B6U2t++/KIbtB76a3zkrQX+btzFtSVP7852c5c3gX
      pw/0l/37+tkzJWkdL/12ki5X85Z2fpAFIOnY9fkgF6f9/NEzB7f8N2QBSLoUT+X4yasX+Ncv
      nMDasPXllCwASXdKispfvPQpLz6xj263/YH+liwASXdeOTtFu7OJU/sf/GKrLABJVyYWQnwy
      ucp3nzu8LadSZQFIuhFP5fjJKxf4Ny88TOMDrPvvJAtA0gVFUfmrly/w7cfHH3jdfydZAJIu
      vP6xF2dzA48e7N/Wq8hlF0Axl2bKOwdAIRXFu+gjFvJz9foUhVySeKaI3+/ftoCSNL0c5v3L
      i3xvm9b9dyp7IVVUBMVCBiEUZpcDKEKwljEw1udgbm6VeDaHp3dAzgatIr1lLidvOlfkf/7q
      PP/uOyewWkzb/jrLPgLYmu2YjAay8RCJVIblVR+KECAEBgNgMKDqrD1X0iZVFfzklQt87eQo
      fR3OijzHlrpB0+ksabWJE8cfIhgK0WBQ8K4m2D3UQ1Y0kk2Eb88GBX01w6mqqqu8oL/Mm837
      60+8mE0mvnJsuGJZZDfoPfTWWQn6y7yZvN6VCD955QI//P4T2BotFcuinz1TqhuZXJG/fvkC
      P/jWsYru/CALQNIYVRX85NULfOXYEMM9roo/nywASVPevjCLEIKvHq/cuv9OsgAkzZjzRXnr
      0zn+5TeOVu0rnrIAJE3IFUr8+Jef8oPfO4a9qaFqzysLQKo5VRX81a/O88zxYYY9rVV9blkA
      Us29d3GeoqLyzLHhqk+3kAUg1dSCP8br57z84FvHMBqrP9pFFoBUM5l8kR+/dHPd77BVb91/
      p7IvHyqlAv5ABE93O/MzM1id7TQZCvhDUXbtGgBzI/l0ArfbXYm80g6hCsFPX7vIE4d3MVKF
      8/0bKbsAsuk0a8E1ero78PT1M3nDi0HJYnf3YCkl8K4GaGxsxuXS982y9UZvmT+4skgqW+TZ
      EyNA7fKXXQD2Fhc2qw+D0UQstIbRZOHA4YNkg3N4V9L4wxHG9+6/3fIqhNDV2D49tRXforfM
      S4E4v3x/kh9+/wxCVall7/CWukHj8QQ+v59oIoO10YZ/aY5wLMXQYB/dA0OkowEMxpbbHzBk
      M1xl6SmzEIKfvnGFP/nmMVrsmxthXknrbrVYeA1/MApAa3sX3e2/W6O5O3s42dkDgKe7+/a/
      9w787vfd9ptj6vR1UJaq4epcgEaLiT0DbbWOAmxwFkioKpcvX0RR8kxMTFU7k7RDCSF45ewU
      /+Sx3ZpZFq9bAK4OD0f372Z+fomu3q0NHZWkey0FEhQVldFe7Zwh3HBxnseC0wrxWKyaeaQd
      SgjBrz64wfMnRjXz7g9fUACZ6BoGRzf2Bv18gJW0KxjLsBxMcGyPp9ZR7rLu3r08O0EkrZCO
      x+jqk0sg6cG98bGX50+MYtLYGcF1zwJ194/S5hlEVXJcuHSVzkdPVjuXtIOksgWuzAZ48an9
      tY5yn3ULYHnmGheuzwIGDp94rMqRpJ3m7fNznNzXt23zPLfTuokGx48wOH6k2lmkHShfLPH+
      5QX+yx8/Weso69qwJM+++xr+aJbhvUc4src638+Udp6Pri1zcLiL5ip+y6scG34iSSYSGI3G
      dU5ZCWKxGEKoLM3PEI6lKObSLC77UUt5ckWFVCpV4diSHpQUldfOefnaydFaR9nQ+q0QIT/9
      YwcQAtzulrseS0SCTM4uc+KhQ7g7upmamsbaYKGz1crCUoaSoQGhwm779o2wlvTpktdPb7uT
      TldzraNsaP0lkMGA0XjzhsP3NrI53Z20BkIYTWZiwXkwWTFZzLjaWghNB1kILPHQ8YdRVfV2
      N6ieuhUVHc411WJmIeAfPprmnz9zgFKpdNdjWsq7bgG0tnWxvLhA+8A4XW13DyWNBFYJhcL4
      /H7i6TwWswVHo4krk6uMDPXSNjBEPOSjo2VYl92ggG46K++ktcxTS2GMRiNDPe51r/xqJe+G
      s0GzyQg//98/A7uH555/np728qfzytmg1aG1zEII/tvPz/LNR3azb7Djvse1lHfDFO+98w7P
      fud7eNx24slMNTNJOuePpEhmCpppef4iG741m5Qsb77xBpenlnC1tmz0Y5J0l5stz9N87aT2
      2h7Ws2HC448+ydhQP067rZp5JJ2LpXJMLAY5ube31lE2ZcMCuD41S2B1lvml5WrmkXTu796b
      4MUn92Eyaf/dHzYogLXlWYolFZO5Cbe7vdqZJJ0KxtLM+aI8PK6Pd3/Y4ENws6OVwV2CVHs7
      bpej2pkknXrl7BTPHB/GrJN3f9jgCGBvcbM4O8n5Tz7ghneh2pkkHUpnC1ybD3L6gL6+P7Lh
      adD+4XEMCGwO7V7GlrTj7fNznDm8S5Mtz19k3SPAzI0J+vp7CIUTmCza7OKTtCNXKPHOZ3N8
      5ehQraOUbd0CSMaC/Prllzl05lly8dBdjynFPIvLqwhVYWF2miVfkPDaKtevXyedSpHKlQiH
      w1UJL2nD2atLHN/TU/Eb2lXCuserQ8dO4RlK0NHWgqf14F2P5bJZIpEQfT2ddHT3MTMzQ6SY
      wdbahbmUYGrZh93eilvI2aDVVKvMiqry9vk5/sOLJ8vKoZVtvG4BGM0NdHW2oxRzxOMJmpsa
      bz/W7GylsWEVA7A452VgeAynzUomNI93NUEkGsfd1nFXF6iWxmB8GVVVdZUXapv5/I1VutzN
      uB2Nm+761dI23vATy9zUNZZW14hlFJ776tNYLTfboyOBVRKJJD6/n0xOIRgMkjIWCcfSDA/1
      07Nr+PPZoK267AYVQmAymWodoyy1yiyE4B8+muGPv36krOfX0jbesACWVn2MjI1x8dPzXJnw
      cvzQHuDmbNATn88G7enpu/3zd84GdTXf/HdtHOSkSvGuRLE1mtnVpd9esQ0LYGSgj6tXJ9hz
      6CjOFnk1WLrbrUlvXz+lnTmfW7Hh2iQaDYPRQqPNSadbfr1RuttyMEEkkWX/Ov3+erJhAZjN
      ZnLpJP6gPKUp3e+1c16+eXqsJje2207rFkA+k2DFFyQajdJg0d+5XamyIokss6tRTuio6W0j
      6xbAxMVzRLIqVkcL4yP66u2QKu/1c16eODKom5bnL7LuKzhy+qt8+xvPceLAbmYXV6udSdKw
      bL7I+SkfTxzZVeso22LDs0DmBisj4weqmUXSgX+8uMDpA33YrDtjaaz/Y5hUNcWSwlvnZ3n6
      6M4ZlSkLQNq0cxMr7Blop9VurXWUbVN2ARQySa5NelGVIlMT15ieWyKytsLlqxPks3Fi6QKr
      q/Jzw06jKCq//niG33tU3xe+7lX2txdUgxmjKGAwmhgZHeX6jVmCBRN7h1zMzvkIJlIMj4zd
      1Qynlc6/zVBVVVOj+zajGpmvzAZoabbS7mx64OfS0jYuuwAam5owGEAoJSZueNk9Ps7c9BTF
      fBGjyYTdYSeXzwM3m+CEELpqhlNVVVd5ofKZb836efGpfdvyPFraxlu6U3wul2ctGEKoKkvL
      q/R6OlgMJBgd7CErrOSSUW5WicBgMOjqkKm3vFD5zPP+GALB7v62bXkeLW3jDWeDbgc5G7Q6
      KplZCMH/+PtPePzgAEfGurflb2ppG+tnz5RqIhjLsBSIc2C4s9ZRKkIWgPSF3j4/y9dPjelq
      1k85duarkraFKgSRZI7HDg58+Q/rlCwAaUPe5QgdLbYd++4PsgCkDQgheOXDKcZ37exvA8oC
      kNblj6SIp3LsH9L3N76+jCwA6T63Lnx99fiILm5y8SB29quTtiSZKTC5GOLhvT21jlJxsgCk
      +7x2zsszx4ewWrRxsaqSyi6AUiHH/OIyQgj8SzOkCoKQf+Xz2aBJkrkiwWCwElmlKsjmi3wy
      ucJTD+lv0O1WlF3i+XyeeDyK6PVQTAaJtwwT8a1idXRgLiWZWFih1dVO++cdFnq7Ubbe8sL2
      Zn7v4jxHxzw0mI0V2w5a2sZlF0CzowWrxYTRZKK1xUkCOHDkONnwAt6VOKlkmrb2LgDNvMhy
      CCF01b4N25e5pKi8e2Ge//SHpyu6DbS0jbfUDZpMpvAHg4TXUiipeURMEI1lGBnup9fQRDoe
      BIPrdhOcnprhtDS3crO2K/Mnkz5297fR3lrZm6JoaRvLbtB7aKlTcbO2I7MQgh/+r/f4wbeO
      0d/p3KZk69PSNtbPnilV1MRCCEdTA30d9XVTRFkA0u1Bt995cq9mvqhSLbIAJBbW4uQKJYY9
      rlpHqTpZAHVOCMGrH07z9VNjdffuD7IA6l4glmY5mODYHk+to9SELIA69+Ynszx7fHjHN71t
      pD5ftQTcvLv7hSkfp/b3ffkP71CyAOrYm5/OcubILpp2yKDbrZAFUKfyhRIfXFnk2eMjtY5S
      U2UXgFAVgqEQQgiS0QDZoiCfSTC7sIxazJEtKMTj8UpklbbRh9eW2T/Uqcu7u2+nsgsgFY8y
      t7iMUBV8s9eIZGF2bgm3tcDc4gqLyysEY+lKZJW2SUlRee2cl288MlbrKDVXdkOGw9WOcy2A
      0WTG091FAjBZGnC02PGHwiwFVzl0+CFUVUVVVU21vm6GVoa2lqPczJ9N+xnocuKyWymVShVK
      tTEtbeMtdYNGIlH8wSCh1ShF+zzdDgtXptYYG+6lfdcQyfAaBrddl3eKBzTTqFWOzWYWQvDa
      uRm++9yhmr5OrWzjslO4O3s4/fmd4rs7fjcxwPP5mbRmoN1x8/5R2uj4lu40vRzBZDKyq7u1
      1lE0QV9vzdIDudX09u3HxzHWYdvDemQB1BF/JEU8nWd8YGcPuyqHLIA68vIHUzx3YkT3d3ff
      TrIA6kQ4kcG7EuHUvvpte1iPLIA68c75OZ4+NrSjB91uhdwadSBXKPHR9RUe38FjzrdKFkAd
      eOv8LCf39tLc1FDrKJojC2CHKykq719a5NkT9d30thFZADvcxxMrjPa6abU31jqKJm2hAASp
      VAoQxMJB0rkCmWScxcVFcvk8hZJKNpvd9qBS+RRF5dUPp2XT2xcouxUiEQlyzbvEsQMjrAaT
      KL4gRlHA1e6BTJjFlIFSvsD46K5K5JXKcG0+SHuLjZ72+pr1U46yC8Dp7sTlDFEq5nC6OsjF
      /XR0dRPxL7GStjE9t8yJU6dlN2gVbZT51Q+neOHx8Zp0fH4RLW3jLXWDrq0FcLV1EvF5abC7
      SMViJDMlunvsHH34JCHfEu7do7IbtIruzTy7GqVYUhnrb9fklV+tbGM5G/QeWppbuVn3ZhZC
      8N9/8TGPHxrgoTHtjTvR0jbWz54pbVo4kcUXTnFouKvWUTRPFsAO9MrZKZ57eASTbHv4UnIL
      7TDxVI7LM2s8erC/1lF0QRbADvPuxXmeODKIxayNG1BonSyAe3hXolzy+vGFk5QU/Zy+Bcjl
      S5y9ssTTR+vjBnfbQRsfxTWkWFL49MYqwViGUDyDyWjE7Wyi291MT5uD3g4n7a02WmxWrA3a
      2ny/vbLI/qFOHDbZ9LZZ8jToPe48RaeqgnSuQDJTYCWUxB9JsRJMEIilSWUKGAwGutzNdLns
      9HY46Hbb8bTZsVktmE3Gqo0bL5VKGAxG/uyv3+FP//A07S22qjzvVmnpNKg2UmiU0WjAYbPi
      sFnvaycQQpDJFQnE0gSiGVZCCS7PrBGIpimWFDAY6Gm7WRR9HQ562h10tDZjr1BL8kWvn/5O
      p+Z3fq2RR4B7POi7083WD0G+pOALJVkOJvGFbx491j4vDntTAx2tzXja7PR1OPG02WlpbsTZ
      bN3ScxYKRf7rz37Ln3zzKANdLVvOXi06PwIIisUSFouZQj6P0dyA0SDIF0o0NlhQMSBURTMv
      sNoMBgMmkwGbychIr5uRXvftx4QQFEoKqWyBYDTDajjJ1HKY9y7OE0/lyeSLtDmb6HLb6Wmz
      42lz4Glz0Gq3YrWYN2xpmF6J0GQ162Ln15qyjwCJSIDLUwucOjLO1ck5DGYLNpNCqVigpa2N
      grGZdDzG/vHRujwCPIhiSSGSyBKIZfCFkywFEvjCSVLZAsWSitvZRE+7A0+bnf4OJ52uZtpb
      bPz5zz/gG4/sYd9gx5c/iQZo6QiwpSXQ5OR1+rtdxAoOsjEfigHGdrm5MeFj1r/G6cfO0NJk
      ut0Nqqd7TymKopmbON9ya1kVTmRZCiRYi6bxR9L4oymiiRzd7mb+4z87qZvtrKVtXHYBRAKr
      XLh8jQMHD+FbXsZsc2I3l4jFU/QP9JIz2okHfOzbtwchjwAVpygqiqLQ0KCfMeda2sbyQ/A9
      tPQ/Z7P0lllLefWzZ0pSBcgCkOqaLACprskCkOqaLACprlX8o/itawF6oaqqpqYWbIbeMmsp
      b8ULwGg06uo0KKCZizTl0FtmreStaAHo5crknfRWrKC/zFrKW9ELYZKkdRVfAuXTcbzzyzTY
      nBgLCZIFI3uGerg4McMjxw9x5dJVRIONg/t2U4vjhffGNVI56Ol04FuL0Ds4Sti3QEFYaLOb
      CUQSjO49iN2qjUN2PLzGkm+NFreHRGgFY1MLHQ4L/mCI9u5B1hYnGdh7HJdNG1dahVDx3rhO
      pmii223DH4zQNzRGcGWBksFKu9NMIBSjf3gcl6P6A3wrfixqsDnxdLgwGkuoBjvdtgYK1mZa
      HE2gZCkZmijGY+QrHWQD/QMDmE1Gosk8hw7vIRqM0t/Xg9FoJJVTOLB3kKA/XKN093O6O3E5
      mlCKKeyufhpFCWenB3tTAyZzAz2dboqKlg7qBgYGBjAZjcTSBQ4d2k0kEKe/txujyUhndx+2
      RgsGQ22WRRV/1kzUjy9Ror+nl3w+RSybpQFBsVigSBM9HTZKJhO1aeVSmZycZmhkCKNSIBwM
      I4yC6blVRoYGEKU8oWAIi625JunW41ucQbW68HS2kU5HyeQLLM9M0eTqweWwUiwWKRaLtY75
      O0Jh8sYswyODGJQC4UAIjCrepQDDg/3MTk/S2tmPw1abPcD0ox/96EeVfAJVFWTTSVTMdLc7
      MTe3YFbzFIoKqsEMSoGegSEaLbU4ZKvkszlSmQKDw7uIJXL093SQz2bI5hUG+j2k8gb6ulw1
      yLY+VVVIJhKYG504rQZaOz1YjJBIJDBbLKSyBYSq0urUykRolVwmSzpXYNdgP7FUkX5PG/lM
      hlxRwd5oJZFI0mR31GSUi/wQLNU17ZyPkqQakAUg1TVZAHUon0mTLypEIhGUYp5MrnDX46JU
      IJm5eV4ulUigiJufMXbiWll+BqhD/unzeFN2zr//Jl878xBZxzDEV+gbGScZ9qMmVrkSd3J0
      tAtT2oc3Ishk8hwY7iClWOloNjK7Emb3ri784TS9gwPYrfr5Suad5BGgDnX0DeGbusD4wAAf
      z0TIr17F3D7Eb955nbfefBe708Fv33wN1erAM3aEucvnOHV8H6++8Y9c+uwCPr+fuesfcfbD
      j5jwJbHqeBCvLIA6ZGpyoaSjHH3qNMlYhtHRYRYnP6Ojd4jB0T20uVw89fQZZqemMBiMDI7u
      obm5mb7uNoZHRwmHgrjaOmm2OxjfM4ZFx/chkEsgqa7pt3QlaRv8f7y9935vHsKbAAAAAElF
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
